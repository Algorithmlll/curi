webpackJsonp([1],{100:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=l(n(62)),o=l(n(63)),i=n(2),u=n(9),c=n(8),s=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(r.default,{name:t,version:n,globalName:l,about:a.default.createElement("p",null,"The prefetch add-on can be used to make data fetching calls prior to navigation by calling a route's ",a.default.createElement(i.InlineJS,null,"match.every")," function. This is different than calling the load function while generating the response because this is done without actually changing locations.")},a.default.createElement(u.Note,null,"You should only use this if you implement some sort of caching/lookup in your load functions. The ",a.default.createElement(i.InlineJS,null,"match.every")," function will be re-called when the user actually navigates to the route, so the benefit comes from the load function using a cached value instead of sending a new request to your server."),a.default.createElement(o.default,null,a.default.createElement(c.Section,{tag:"h3",title:"createPrefetchAddon",id:"createPrefetchAddon"},a.default.createElement("p",null,"The default export function is an add-on factory that will add an"," ",a.default.createElement(i.InlineJS,null,"prefetch")," function to your router object's add-on property."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"import curi from '@curi/core';\nimport prefetch from '@curi/addon-prefetch';\n\nconst router = curi(history, routes, { addons: [prefetch()] });\n"),a.default.createElement("p",null,"The prefetch add-on allows you to call a route's"," ",a.default.createElement(i.InlineJS,null,"match.every")," function manually. Why would you want to do this? Prefetching data means that when users navigate, the new page will be full rendered faster because we already have the data."),a.default.createElement(c.Subsection,{title:"Arguments",id:"arguments"},a.default.createElement(i.PrismBlock,{lang:"javascript"},"// call a route's load function manually\nrouter.addons.prefetch('User', { params: { id: 2 }})"),a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"name")," - the name of the route whose"," ",a.default.createElement(i.InlineJS,null,"match.every")," function should be called."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"props")," - route props that are used by the"," ",a.default.createElement(i.InlineJS,null,"match.every")," function (the same ones that a"," ",a.default.createElement(i.InlineJS,null,"match.every")," function expects).")),a.default.createElement("p",null,"This add-on will only register routes that have a"," ",a.default.createElement(i.InlineJS,null,"match.every")," function.")))))};t.default=s},101:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=n(1),o=l(n(62)),i=l(n(63)),u=n(2),c=n(8),s=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(o.default,{name:t,version:n,globalName:l,about:a.default.createElement("p",null,"This package allows you to set ",a.default.createElement(u.InlineJS,null,"title")," properties on your routes and will automatically set the page's title whenever the location changes.")},a.default.createElement(i.default,null,a.default.createElement(c.Section,{tag:"h3",title:"createTitleSideEffect",id:"createTitleSideEffect"},a.default.createElement(u.PrismBlock,{lang:"javascript"},"import curi from '@curi/core';\nimport createTitleSideEffect from '@curi/side-effect-title';\n\nconst setTitle = createTitleSideEffect({\n  suffix: 'My Site',\n  delimiter: '|'\n});\n\nconst router = curi(history, routes, {\n  sideEffects: [{ fn: setTitle }]\n});"),a.default.createElement("p",null,"In order for this to work, you will need to set title properties on your routes. You can learn more about ",a.default.createElement(u.InlineJS,null,"route.title")," in the"," ",a.default.createElement(r.Link,{to:"Guide",params:{slug:"routes"}},"all about routes")," ","guide."),a.default.createElement("p",null,"You can provide a prefix and/or a suffix string that will be included before/after the title."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"const prefixedTitle = createTitleSideEffect({ prefix: 'Before'});\n// response.title = 'Middle'\n// document.title = 'Before Middle';\n\nconst suffixedTitle = createTitleSideEffect({ suffix: 'After'});\n// response.title = 'Middle'\n// document.title = 'Middle After';"),a.default.createElement("p",null,"A ",a.default.createElement(u.InlineJS,null,"delimiter")," can be specified for joining the"," ",a.default.createElement(u.InlineJS,null,"prefix")," and ",a.default.createElement(u.InlineJS,null,"suffix")," to the title string. Spaces will be placed between the prefix, title, and suffix strings and the delimiters."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"const prefixedTitle = createTitleSideEffect({\n  prefix: 'Before',\n  suffix: 'After',\n  delimiter: '&'\n});\n// response.title = 'Middle'\n// document.title = 'Before & Middle & After';"),a.default.createElement(u.PrismBlock,{lang:"javascript"},"const prefixedTitle = createTitleSideEffect({ prefix: 'Before'});\n// response.title = 'Middle'\n// document.title = 'Before Middle';\n\nconst suffixedTitle = createTitleSideEffect({ suffix: 'After'});\n// response.title = 'Middle'\n// document.title = 'Middle After';"),a.default.createElement("p",null,"A ",a.default.createElement(u.InlineJS,null,"delimiter")," can be specified for joining the"," ",a.default.createElement(u.InlineJS,null,"prefix")," and ",a.default.createElement(u.InlineJS,null,"suffix")," to the title string. Spaces will be placed between the prefix, title, and suffix strings and the delimiters."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"const prefixedTitle = createTitleSideEffect({\n  prefix: 'Before',\n  suffix: 'After',\n  delimiter: '&'\n});\n// response.title = 'Middle'\n// document.title = 'Before & Middle & After';"))))};t.default=s},102:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=(n(1),l(n(62))),o=l(n(63)),i=n(2),u=n(8),c=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(r.default,{name:t,version:n,globalName:l,about:a.default.createElement("div",null,a.default.createElement("p",null,"Hickory, the history package that Curi uses, uses the"," ",a.default.createElement(i.InlineJS,null,"pushState")," and ",a.default.createElement(i.InlineJS,null,"replaceState")," methods for navigation. Unfortunately, these do not trigger scrolling to the top of the page when you navigate. This package provides a side effect function that will scroll to the top of the page whenever those functions are used for navigation."),a.default.createElement("p",null,"Other types of navigation, such as clicking the browser's back and forward buttons, will rely on the browser to correctly restore the scroll position."))},a.default.createElement(o.default,null,a.default.createElement(u.Section,{tag:"h3",title:"createScrollSideEffect",id:"createScrollSideEffect"},a.default.createElement("p",null,"When registering the side effect, you should pass the"," ",a.default.createElement(i.InlineJS,null,"after: true")," option. This should make the side effect run after your application has re-rendered (although this is not guaranteed if your application is rendered asynchronously)."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"import curi from '@curi/core';\nimport createScrollSideEffect from '@curi/side-effect-scroll';\n\nconst scrollTo = createScrollSideEffect();\n\nconst router = curi(history, routes, {\n  sideEffects: [{ fn: scrollTo, after: true }]\n});"))))};t.default=c},103:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=n(1),o=l(n(62)),i=l(n(63)),u=n(2),c=n(9),s=n(8),d=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(o.default,{name:t,version:n,globalName:l,about:a.default.createElement("div",null,a.default.createElement("p",null,"The ",a.default.createElement(u.InlineJS,null,"@curi/react")," provides a number of React components that you can use for rendering your application."))},a.default.createElement(i.default,null,a.default.createElement(s.Section,{title:a.default.createElement(u.InlineComponent,null,"CuriBase"),id:"CuriBase"},a.default.createElement("p",null,"The ",a.default.createElement(u.InlineComponent,null,"CuriBase")," component places values on React's"," ",a.default.createElement(u.InlineJS,null,"context")," so that child components can access them."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import { CuriBase } from '@curi/react';"),a.default.createElement(u.PrismBlock,{lang:"jsx"},"const router = curi(history, routes);\n\nrouter.respond((response) => {\n  ReactDOM.render((\n    <CuriBase\n      response={response}\n      router={router}\n      render={response => {\n        return response.body ? <response.body /> : null;\n      }}\n    />\n  ), holder);\n});"),a.default.createElement(s.Section,{tag:"h3",title:"Props",id:"CuriBase-props"},a.default.createElement(s.Subsection,{tag:"h4",title:"router",id:"CuriBase-router"},a.default.createElement("p",null,"A router (created by calling curi's curi function).")),a.default.createElement(s.Subsection,{tag:"h4",title:"render",id:"CuriBase-render"},a.default.createElement("p",null,"A render function. This will be called whenever the"," ",a.default.createElement(u.InlineComponent,null,"CuriBase")," renders. The function will be passed the current response object and the router object it was passed as a prop. The function must return a React element.")),a.default.createElement(s.Subsection,{tag:"h4",title:"response",id:"CuriBase-response"},a.default.createElement("p",null,"A response object. You can pass your ",a.default.createElement(u.InlineComponent,null,"CuriBase")," a response object and it will use that instead of subscribing to the router. This is ideal for server-side rendering.")),a.default.createElement(s.Subsection,{tag:"h4",title:"navigation",id:"CuriBase-navigation"},a.default.createElement("p",null,"The ",a.default.createElement(u.InlineJS,null,"navigation")," object describing the most recent navigation (the second argument passed to"," ",a.default.createElement(u.InlineJS,null,"router.respond")," callbacks).")))),a.default.createElement(s.Section,{title:a.default.createElement(u.InlineComponent,null,"Link"),id:"Link"},a.default.createElement("p",null,"A ",a.default.createElement(u.InlineComponent,null,"Link")," allows you to navigate within your application using an anchor element (",a.default.createElement(u.InlineComponent,null,"a"),"). When the rendered element is clicked, instead of reloading the page it will use your router object's history object to navigate."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import { Link } from '@curi/react';"),a.default.createElement("p",null,"With the ",a.default.createElement(u.InlineComponent,null,"Link"),", instead of providing a URI to navigate to, you just need to specify the name of the route you want to link to. Then, the pathname of the URI you want the component to link to will be automatically generated for you."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Link to='User' params={{ id: 16 }}>User 16</Link>\n// <a href='/user/16'>User 16</a>"),a.default.createElement(s.Section,{tag:"h3",title:"Props",id:"Link-props"},a.default.createElement(s.Subsection,{tag:"h4",title:"to",id:"Link-to"},a.default.createElement("p",null,"The name of the route that you want to navigate to.")),a.default.createElement(s.Subsection,{tag:"h4",title:"params",id:"Link-params"},a.default.createElement("p",null,"If the route that you want to navigate to (or any of its parents) include path parameters, you can specify them using the params prop."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"// User route is { name: 'User', path: '/user/:id' }\n<Link to='User' params={{ id: 16 }}>User 16</Link>")),a.default.createElement(s.Subsection,{tag:"h4",title:"details",id:"Link-details"},a.default.createElement("p",null,"While the pathname of the location to navigate to will be generated for you, this does not cover over location properties (query, hash, and state). You can provide these values using the details prop."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Link\n  to='Products'\n  params={{ type: 'vacuums' }}\n  details={{ hash: 'iroomba' }}\n>\n  DJ Roomba\n</Link>"),a.default.createElement(c.Note,null,"You can also include a pathname property in the details object and it will overwrite the one generated from the to prop. This isn't recommended, but does work.")),a.default.createElement(s.Subsection,{tag:"h4",title:"anchor",id:"Link-anchor"},a.default.createElement("p",null,"By default, when you render a ",a.default.createElement(u.InlineComponent,null,"Link"),", an anchor element will be rendered (",a.default.createElement(u.InlineJS,null,"React.createElement('a', ...)"),"). However, you can provide your own component to be rendered instead. This can be useful for using styled components to navigate."),a.default.createElement(c.Warning,null,"You can provide any component that you want, but you"," ",a.default.createElement("em",null,"should")," stick with an anchor (or a component that renders an anchor). There are accessibility issues that will occur when you use other DOM elements as links. The component's prop type is func in an attempt to discourage you from making your link render a button, div, span, etc.")),a.default.createElement(s.Subsection,{tag:"h4",title:"active",id:"Link-active"},a.default.createElement("p",null,"The active prop gives you an opportunity to style the element rendered by the ",a.default.createElement(u.InlineComponent,null,"Link"),' when it is "active". Being active means that the ',a.default.createElement(u.InlineComponent,null,"Link"),"'s route parameters are the same as the current response's route parameters. This"," ",a.default.createElement("strong",null,"does not")," take into account any query parameters or the hash."),a.default.createElement("p",null,"The active prop is an object with two properties. The first one, merge is required. The merge property must be a function. That function's argument is the props object that will be passed used to render the element rendered by the ",a.default.createElement(u.InlineComponent,null,"Link"),". The merge function can modify these props however it likes. It must return the resulting props object."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"function mergeActive(props) {\n  props.className = 'active';\n  return props;\n}\n\n<Link to='Home' active={{ merge: mergeActive }}>Home</Link>"),a.default.createElement("p",null,"The second property of the active object is partial. By default, only ",a.default.createElement(u.InlineComponent,null,"Link"),'s that match the response object\'s name can be considered "active". However, when partial is true, any parent routes can also be "active". This is done using the response object\'s partials property.'),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Link to='Users' active={{ partial: true, merge: mergeActive }}>Users</Link>"),a.default.createElement(c.Note,null,"If you use the active prop, you have to include the"," ",a.default.createElement(r.Link,{to:"Package",params:{package:"addon-active"}},"@curi/addon-active")," ","add-on in your Curi router. If you do not, an error will be thrown.")))),a.default.createElement(s.Section,{title:a.default.createElement(u.InlineComponent,null,"Active"),id:"Active"},a.default.createElement("p",null,"The ",a.default.createElement(u.InlineComponent,null,"Active"),' component allows you to style its child component as "active" when the location that ',a.default.createElement(u.InlineComponent,null,"Active")," ","describe matches the current location."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import { Active } from '@curi/react';"),a.default.createElement("p",null,"The ",a.default.createElement(u.InlineComponent,null,"Active")," component lets you modify its children element's props. It takes a merge function as a prop, which you can use to modify the child element's props when the component is \"active\"."),a.default.createElement(s.Section,{tag:"h3",title:"Props",id:"Active-props"},a.default.createElement(s.Subsection,{tag:"h4",title:"name",id:"Active-name"},a.default.createElement("p",null,"The name of the route to compare against the response object.")),a.default.createElement(s.Subsection,{tag:"h4",title:"params",id:"Active-params"},a.default.createElement("p",null,"An object containing route parameters. These will be compared against the route params of the response object.")),a.default.createElement(s.Subsection,{tag:"h4",title:"children",id:"Active-children"},a.default.createElement("p",null,"A React element that will have its props updated when the"," ",a.default.createElement(u.InlineComponent,null,"Active"),' component is "active".')),a.default.createElement(s.Subsection,{tag:"h4",title:"merge",id:"Active-merge"},a.default.createElement("p",null,"A function that will modify the children element's props. It receives a props object as its argument and must return a props object.")),a.default.createElement(s.Subsection,{tag:"h4",title:"partial",id:"Active-partial"},a.default.createElement("p",null,'A boolean that defaults to false. When it is true, the "active" check will check the response\'s partials array in addition to its name. This allows you to style ancestor routes of the actually "active" route.'))),a.default.createElement(s.Section,{tag:"h3",title:"Usage",id:"Active-usage"},a.default.createElement(u.PrismBlock,{lang:"jsx"},"function merge(props) {\n  props.className = 'active';\n  return props; \n}\n\nconst Users = (props) => (\n  {\n    props.users.map(u => (\n      <Active\n        key={u.id}\n        name='User'\n        merge={merge}\n        params={u}\n      >\n        <User {...u} />\n      </Active>\n    ))\n  }\n);"),a.default.createElement("p",null,"This relies on the active add-on from"," ",a.default.createElement(r.Link,{to:"Package",params:{package:"addon-active"}},"@curi/addon-active")," ","being added to your router."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import createActiveAddon from '@curi/active-addon';\n\nconst router = curi(history, routes, {\n  addons: [createActiveAddon]\n});"),a.default.createElement("p",null,"While not strictly a requirement, the ",a.default.createElement(u.InlineComponent,null,"Active")," relies on the ",a.default.createElement(u.InlineJS,null,"curi")," and ",a.default.createElement(u.InlineJS,null,"curiResponse")," context variables existing, so your application should have a"," ",a.default.createElement(r.Link,{to:"Package",params:{package:"react"},details:{hash:"CuriBase"}},a.default.createElement(u.InlineComponent,null,"CuriBase"))," ","as an ancestor of your ",a.default.createElement(u.InlineComponent,null,"Active"),"components in order to ensure that those exist."))),a.default.createElement(s.Section,{title:a.default.createElement(u.InlineComponent,null,"Block"),id:"Block"},a.default.createElement("p",null,"The ",a.default.createElement(u.InlineComponent,null,"Block")," component lets you prevent navigation until a user has confirmed that they want to navigate. This can be useful when the user attempts to navigate away from a partially filled form. This"," ",a.default.createElement("strong",null,"will not")," prevent the user from navigating to another site, it only works for navigation within the application."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import { Block } from '@curi/react';"),a.default.createElement(s.Section,{tag:"h3",title:"Props",id:"Block-props"},a.default.createElement(s.Subsection,{tag:"h4",title:"active",id:"Block-active"},a.default.createElement("p",null,"A boolean, which is true by default. When it is true, the navigation block is active. When it is false, navigation will not be blocked."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"// will block navigation\n<Block active={true} confirm={confirm} />\n\n// will not block navigation\n<Block active={false} confirm={confirm} />")),a.default.createElement(s.Subsection,{tag:"h4",title:"confirm",id:"Block-confirm"},a.default.createElement("p",null,"The confirm prop is a function that will be called whenever there is navigation. The function will receive four arguments: location, action, success, and failure. The location and action values are the location object that is being navigated to and the type of navigation. The success and failure arguments are functions that you should call depending on whether or not you want to let the navigation happen. When the navigation should occur, the confirm function should call the success function. When the navigation should be cancelled, the failure function should be called."),a.default.createElement(u.PrismBlock,{lang:"jsx"},'<Block\n  confirm={({ location, action }, success, failure) => {\n    const response = window.confirm("Shall we?");\n    if (response) {\n      success();\n    } else {\n      failure();\n    }\n  }}\n/>')))),a.default.createElement(s.Section,{title:a.default.createElement(u.InlineComponent,null,"Curious"),id:"Curious"},a.default.createElement("p",null,"A component with a ",a.default.createElement(u.InlineJS,null,"render")," function to pass"," ",a.default.createElement(u.InlineJS,null,"router"),", ",a.default.createElement(u.InlineJS,null,"response"),", and ",a.default.createElement(u.InlineJS,null,"navigation")," ","props to componeonts."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import { Curious } from '@curi/react';"),a.default.createElement(u.PrismBlock,{lang:"jsx"},"class MyComponent extends React.Component {\n  render() {\n    return (\n      <Curious render={({ router, response, navigation }) => {\n        // pass these props to any components that need them\n        return (\n          <ThingThatNeedsResponse response={response} />\n        );\n      }} />\n    )\n  }\n}\n\nexport default MyComponent;"),a.default.createElement(s.Section,{tag:"h3",title:"Props",id:"curious-props"},a.default.createElement(s.Subsection,{tag:"h4",title:"render",id:"curious-render"},"A function that returns a React element. This function will receive an object with ",a.default.createElement(u.InlineJS,null,"router"),", ",a.default.createElement(u.InlineJS,null,"response")," and"," ",a.default.createElement(u.InlineJS,null,"navigation")," properties that you can pass to components.",a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Curious render={({ router, response, navigation }) => {...} />")),a.default.createElement(s.Subsection,{tag:"h4",title:"responsive",id:"curious-responsive"},a.default.createElement("p",null,"By default, the ",a.default.createElement(u.InlineComponent,null,"Curious")," component will call its"," ",a.default.createElement(u.InlineJS,null,"render")," function whenever a re-render propagates to it. However, if you have navigation blocks in your application (",a.default.createElement(u.InlineJS,null,"React.PureComponent")," ","or ",a.default.createElement(u.InlineJS,null,"shouldComponentUpdate"),"), you can use"," ",a.default.createElement(u.InlineJS,null,"responsive={true}")," to trigger re-renders."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Curious responsive={true} {...} />")),a.default.createElement(s.Subsection,{tag:"h4",title:"router",id:"curious-router"},a.default.createElement("p",null,"By default, the ",a.default.createElement(u.InlineComponent,null,"Curious")," component will grab the props it passes to the ",a.default.createElement(u.InlineJS,null,"render")," function from React's"," ",a.default.createElement(u.InlineJS,null,"context"),". However, you might want to make your root Curi component (",a.default.createElement(u.InlineComponent,null,"CuriBase"),") automatically listen for responses. In order to do this, you can pass ",a.default.createElement(u.InlineComponent,null,"Curious")," a"," ",a.default.createElement(u.InlineJS,null,"router")," and it will listen using that."),a.default.createElement(c.Note,null,"If you pass a ",a.default.createElement(u.InlineJS,null,"router")," prop to ",a.default.createElement(u.InlineComponent,null,"Curious"),", you do not have to pass it the ",a.default.createElement(u.InlineJS,null,"responsive")," prop."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Curious\n  router={router}\n  render={props => <CuriBase render={render} {...props} />}\n/>"))))))};t.default=d},104:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=n(1),o=l(n(62)),i=l(n(63)),u=n(2),c=n(9),s=n(8),d=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(o.default,{name:t,version:n,globalName:l,unpkg:!1,about:a.default.createElement("div",null,a.default.createElement("p",null,"The ",a.default.createElement(u.InlineJS,null,"@curi/react-native")," provides a number of React components that you can use for rendering your React Native application."),a.default.createElement("p",null,"For more information on using Curi with React Native, please check out the"," ",a.default.createElement(r.Link,{to:"Guide",params:{slug:"react-native"}},"React Native guide"),"."))},a.default.createElement(i.default,null,a.default.createElement(s.Section,{title:a.default.createElement(u.InlineComponent,null,"CuriBase"),id:"CuriBase"},a.default.createElement("p",null,"The ",a.default.createElement(u.InlineComponent,null,"CuriBase")," component places values on React's"," ",a.default.createElement(u.InlineJS,null,"context")," so that child components can access them."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import { CuriBase } from '@curi/react-native';"),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<CuriBase\n  response={response}\n  router={router}\n  render={response => {\n    return response.body ? <response.body /> : null;\n  }}\n/>"),a.default.createElement(s.Section,{tag:"h3",title:"Props",id:"CuriBase-props"},a.default.createElement(s.Subsection,{tag:"h4",title:"router",id:"CuriBase-router"},a.default.createElement("p",null,"A router (created by calling curi's curi function).")),a.default.createElement(s.Subsection,{tag:"h4",title:"render",id:"CuriBase-render"},a.default.createElement("p",null,"A render function. This will be called whenever the"," ",a.default.createElement(u.InlineComponent,null,"CuriBase")," renders. The function will be passed the current response object and the router object it was passed as a prop. The function must return a React element.")),a.default.createElement(s.Subsection,{tag:"h4",title:"response",id:"CuriBase-response"},a.default.createElement("p",null,"A response object. You can pass your ",a.default.createElement(u.InlineComponent,null,"CuriBase")," a response object and it will use that instead of subscribing to the router. This is ideal for server-side rendering.")),a.default.createElement(s.Subsection,{tag:"h4",title:"navigation",id:"CuriBase-navigation"},a.default.createElement("p",null,"The ",a.default.createElement(u.InlineJS,null,"navigation")," object describing the most recent navigation (the second argument passed to"," ",a.default.createElement(u.InlineJS,null,"router.respond")," callbacks).")))),a.default.createElement(s.Section,{title:a.default.createElement(u.InlineComponent,null,"Link"),id:"Link"},a.default.createElement("p",null,"A ",a.default.createElement(u.InlineComponent,null,"Link")," allows you to navigate within your application. By default, this will render a ",a.default.createElement(u.InlineComponent,null,"TouchableHighlight"),", but you can also provide another component. When the rendered element is clicked, instead of reloading the page it will use your router object's history object to navigate."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import { Link } from '@curi/react-native';"),a.default.createElement("p",null,"With the ",a.default.createElement(u.InlineComponent,null,"Link"),", instead of providing a URI to navigate to, you just need to specify the name of the route you want to link to. Then, the pathname of the URI you want the component to link to will be automatically generated for you."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Link to='User' params={{ id: 16 }}>User 16</Link>\n// <TouchableHighlight>User 16</TouchableHighlight>"),a.default.createElement(s.Section,{tag:"h3",title:"Props",id:"Link-props"},a.default.createElement(s.Subsection,{tag:"h4",title:"to",id:"Link-to"},a.default.createElement("p",null,"The name of the route that you want to navigate to.")),a.default.createElement(s.Subsection,{tag:"h4",title:"params",id:"Link-params"},a.default.createElement("p",null,"If the route that you want to navigate to (or any of its parents) include path parameters, you can specify them using the params prop."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"// User route is { name: 'User', path: '/user/:id' }\n<Link to='User' params={{ id: 16 }}>User 16</Link>")),a.default.createElement(s.Subsection,{tag:"h4",title:"details",id:"Link-details"},a.default.createElement("p",null,"While the pathname of the location to navigate to will be generated for you, this does not cover over location properties (query, hash, and state). You can provide these values using the details prop."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Link\n  to='Products'\n  params={{ type: 'vacuums' }}\n  details={{ hash: 'iroomba' }}\n>\n  DJ Roomba\n</Link>"),a.default.createElement(c.Note,null,"You can also include a pathname property in the details object and it will overwrite the one generated from the to prop. This isn't recommended, but does work.")),a.default.createElement(s.Subsection,{tag:"h4",title:"anchor",id:"Link-anchor"},a.default.createElement("p",null,"By default, when you render a ",a.default.createElement(u.InlineComponent,null,"Link"),", an anchor element will be rendered (",a.default.createElement(u.InlineJS,null,"React.createElement(TouchableHighlight, ...)"),"). However, you can provide your own component to be rendered instead. This can be useful for using styled components to navigate.")),a.default.createElement(s.Subsection,{tag:"h4",title:"active",id:"Link-active"},a.default.createElement("p",null,"The active prop gives you an opportunity to style the element rendered by the ",a.default.createElement(u.InlineComponent,null,"Link"),' when it is "active". Being active means that the ',a.default.createElement(u.InlineComponent,null,"Link"),"'s route parameters are the same as the current response's route parameters. This"," ",a.default.createElement("strong",null,"does not")," take into account any query parameters or the hash."),a.default.createElement("p",null,"The active prop is an object with two properties. The first one, merge is required. The merge property must be a function. That function's argument is the props object that will be passed used to render the element rendered by the ",a.default.createElement(u.InlineComponent,null,"Link"),". The merge function can modify these props however it likes. It must return the resulting props object."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"function mergeActive(props) {\n  props.className = 'active';\n  return props;\n}\n\n<Link to='Home' active={{ merge: mergeActive }}>Home</Link>"),a.default.createElement("p",null,"The second property of the active object is partial. By default, only ",a.default.createElement(u.InlineComponent,null,"Link"),'s that match the response object\'s name can be considered "active". However, when partial is true, any parent routes can also be "active". This is done using the response object\'s partials property.'),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Link to='Users' active={{ partial: true, merge: mergeActive }}>Users</Link>"),a.default.createElement(c.Note,null,"If you use the active prop, you have to include the"," ",a.default.createElement(r.Link,{to:"Package",params:{package:"addon-active"}},"@curi/addon-active")," ","add-on in your Curi router. If you do not, an error will be thrown.")))),a.default.createElement(s.Section,{title:a.default.createElement(u.InlineComponent,null,"Active"),id:"Active"},a.default.createElement("p",null,"The ",a.default.createElement(u.InlineComponent,null,"Active"),' component allows you to style its child component as "active" when the location that ',a.default.createElement(u.InlineComponent,null,"Active")," ","describe matches the current location."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import { Active } from '@curi/react-native';"),a.default.createElement("p",null,"The ",a.default.createElement(u.InlineComponent,null,"Active")," component lets you modify its children element's props. It takes a merge function as a prop, which you can use to modify the child element's props when the component is \"active\"."),a.default.createElement(s.Section,{tag:"h3",title:"Props",id:"Active-props"},a.default.createElement(s.Subsection,{tag:"h4",title:"name",id:"Active-name"},a.default.createElement("p",null,"The name of the route to compare against the response object.")),a.default.createElement(s.Subsection,{tag:"h4",title:"params",id:"Active-params"},a.default.createElement("p",null,"An object containing route parameters. These will be compared against the route params of the response object.")),a.default.createElement(s.Subsection,{tag:"h4",title:"children",id:"Active-children"},a.default.createElement("p",null,"A React element that will have its props updated when the"," ",a.default.createElement(u.InlineComponent,null,"Active"),' component is "active".')),a.default.createElement(s.Subsection,{tag:"h4",title:"merge",id:"Active-merge"},a.default.createElement("p",null,"A function that will modify the children element's props. It receives a props object as its argument and must return a props object.")),a.default.createElement(s.Subsection,{tag:"h4",title:"partial",id:"Active-partial"},a.default.createElement("p",null,'A boolean that defaults to false. When it is true, the "active" check will check the response\'s partials array in addition to its name. This allows you to style ancestor routes of the actually "active" route.'))),a.default.createElement(s.Section,{tag:"h3",title:"Usage",id:"Active-usage"},a.default.createElement(u.PrismBlock,{lang:"jsx"},"function merge(props) {\n  props.className = 'active';\n  return props; \n}\n\nconst Users = (props) => (\n  {\n    props.users.map(u => (\n      <Active\n        key={u.id}\n        name='User'\n        merge={merge}\n        params={u}\n      >\n        <User {...u} />\n      </Active>\n    ))\n  }\n);"),a.default.createElement("p",null,"This relies on the active add-on from"," ",a.default.createElement(r.Link,{to:"Package",params:{package:"addon-active"}},"@curi/addon-active")," ","being added to your router."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import createActiveAddon from '@curi/active-addon';\n\nconst router = curi(history, routes, {\n  addons: [createActiveAddon]\n});"),a.default.createElement("p",null,"While not strictly a requirement, the ",a.default.createElement(u.InlineComponent,null,"Active")," relies on the ",a.default.createElement(u.InlineJS,null,"curi")," and ",a.default.createElement(u.InlineJS,null,"curiResponse")," context variables existing, so your application should have a"," ",a.default.createElement(r.Link,{to:"Package",params:{package:"react"},details:{hash:"CuriBase"}},a.default.createElement(u.InlineComponent,null,"CuriBase"))," ","as an ancestor of your ",a.default.createElement(u.InlineComponent,null,"Active"),"components in order to ensure that those exist."))),a.default.createElement(s.Section,{title:a.default.createElement(u.InlineComponent,null,"Block"),id:"Block"},a.default.createElement("p",null,"The ",a.default.createElement(u.InlineComponent,null,"Block")," component lets you prevent navigation until a user has confirmed that they want to navigate. This can be useful when the user attempts to navigate away from a partially filled form. This"," ",a.default.createElement("strong",null,"will not")," prevent the user from navigating to another site, it only works for navigation within the application."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import { Block } from '@curi/react-native';"),a.default.createElement(s.Section,{tag:"h3",title:"Props",id:"Block-props"},a.default.createElement(s.Subsection,{tag:"h4",title:"active",id:"Block-active"},a.default.createElement("p",null,"A boolean, which is true by default. When it is true, the navigation block is active. When it is false, navigation will not be blocked."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"// will block navigation\n<Block active={true} confirm={confirm} />\n\n// will not block navigation\n<Block active={false} confirm={confirm} />")),a.default.createElement(s.Subsection,{tag:"h4",title:"confirm",id:"Block-confirm"},a.default.createElement("p",null,"The confirm prop is a function that will be called whenever there is navigation. The function will receive four arguments: location, action, success, and failure. The location and action values are the location object that is being navigated to and the type of navigation. The success and failure arguments are functions that you should call depending on whether or not you want to let the navigation happen. When the navigation should occur, the confirm function should call the success function. When the navigation should be cancelled, the failure function should be called."),a.default.createElement(u.PrismBlock,{lang:"jsx"},'<Block\n  confirm={({ location, action }, success, failure) => {\n    const response = window.confirm("Shall we?");\n    if (response) {\n      success();\n    } else {\n      failure();\n    }\n  }}\n/>')))),a.default.createElement(s.Section,{title:a.default.createElement(u.InlineComponent,null,"Curious"),id:"Curious"},a.default.createElement("p",null,"A component with a ",a.default.createElement(u.InlineJS,null,"render")," function to pass"," ",a.default.createElement(u.InlineJS,null,"router"),", ",a.default.createElement(u.InlineJS,null,"response"),", and ",a.default.createElement(u.InlineJS,null,"navigation")," ","props to componeonts."),a.default.createElement(u.PrismBlock,{lang:"javascript"},"import { Curious } from '@curi/react-native';"),a.default.createElement(u.PrismBlock,{lang:"jsx"},"class MyComponent extends React.Component {\n  render() {\n    return (\n      <Curious render={({ router, response, navigation }) => {\n        // pass these props to any components that need them\n        return (\n          <ThingThatNeedsResponse response={response} />\n        );\n      }} />\n    )\n  }\n}\n\nexport default MyComponent;"),a.default.createElement(s.Section,{tag:"h3",title:"Props",id:"curious-props"},a.default.createElement(s.Subsection,{tag:"h4",title:"render",id:"curious-render"},"A function that returns a React element. This function will receive an object with ",a.default.createElement(u.InlineJS,null,"router"),", ",a.default.createElement(u.InlineJS,null,"response")," and"," ",a.default.createElement(u.InlineJS,null,"navigation")," properties that you can pass to components.",a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Curious render={({ router, response, navigation }) => {...} />")),a.default.createElement(s.Subsection,{tag:"h4",title:"responsive",id:"curious-responsive"},a.default.createElement("p",null,"By default, the ",a.default.createElement(u.InlineComponent,null,"Curious")," component will call its"," ",a.default.createElement(u.InlineJS,null,"render")," function whenever a re-render propagates to it. However, if you have navigation blocks in your application (",a.default.createElement(u.InlineJS,null,"React.PureComponent")," ","or ",a.default.createElement(u.InlineJS,null,"shouldComponentUpdate"),"), you can use"," ",a.default.createElement(u.InlineJS,null,"responsive={true}")," to trigger re-renders."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Curious responsive={true} {...} />")),a.default.createElement(s.Subsection,{tag:"h4",title:"router",id:"curious-router"},a.default.createElement("p",null,"By default, the ",a.default.createElement(u.InlineComponent,null,"Curious")," component will grab the props it passes to the ",a.default.createElement(u.InlineJS,null,"render")," function from React's"," ",a.default.createElement(u.InlineJS,null,"context"),". However, you might want to make your root Curi component (",a.default.createElement(u.InlineComponent,null,"CuriBase"),") automatically listen for responses. In order to do this, you can pass ",a.default.createElement(u.InlineComponent,null,"Curious")," a"," ",a.default.createElement(u.InlineJS,null,"router")," and it will listen using that."),a.default.createElement(c.Note,null,"If you pass a ",a.default.createElement(u.InlineJS,null,"router")," prop to ",a.default.createElement(u.InlineComponent,null,"Curious"),", you do not have to pass it the ",a.default.createElement(u.InlineJS,null,"responsive")," prop."),a.default.createElement(u.PrismBlock,{lang:"jsx"},"<Curious\n  router={router}\n  render={props => <CuriBase render={render} {...props} />}\n/>"))))))};t.default=d},105:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=(n(1),l(n(62))),o=l(n(63)),i=n(2),u=n(8),c=(n(9),function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(r.default,{name:t,version:n,globalName:l,about:a.default.createElement("p",null,"This package allows you to synchronize the response objects generated by Curi with your Redux store. Whenever location changes occur, they will be dispatched to your store. If you use this (with a React application), you do not have to use the ",a.default.createElement(i.InlineComponent,null,"CuriBase"),".")},a.default.createElement(o.default,null,a.default.createElement(i.PrismBlock,{lang:"javascript"},"import { syncResponses, curiReducer } from '@curi/redux';"),a.default.createElement(u.Section,{tag:"h3",title:"syncResponses",id:"syncResponses"},a.default.createElement("p",null,a.default.createElement(i.InlineJS,null,"syncResponses"),' is responsible for linking your Redux store with your Curi router. It subscribes to location changes emitted from your router with a function that will dispatch a "location changed" event to the Redux store. It will also add your Curi router to the store.'),a.default.createElement(i.PrismBlock,{lang:"javascript"},"const router = curi(history, routes);\nconst store = createStore(reducer);\n\nsyncResponses(store, router);\n// whenever navigation happens, the router will now\n// pass the response and navigation to your Redux store.\n")),a.default.createElement(u.Section,{tag:"h3",title:"curiReducer",id:"curiReducer"},a.default.createElement("p",null,"The ",a.default.createElement(i.InlineJS,null,"curiReducer")," keeps track of your Curi router, the latest response object, and the latest navigation object in your Redux store."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"const router = curi(history, routes);\nconst reducer = combineReducers({\n  curi: curiReducer,\n  ...\n});\nconst store = createStore(reducer);\nsyncResponses(store, router);\nconst { curi } = store.getState();\n// curi = { router, response, navigation }"))))});t.default=c},106:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=(n(1),l(n(62))),o=l(n(63)),i=n(2),u=n(8),c=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(r.default,{name:t,version:n,globalName:l,about:a.default.createElement("p",null,"This package allows you to synchronize the response objects generated by Curi with MobX. Whenever location changes occur, the store will be updated.")},a.default.createElement(o.default,null,a.default.createElement(i.PrismBlock,{lang:"javascript"},"import CuriStore from '@curi/mobx';"),a.default.createElement(u.Section,{tag:"h3",title:"CuriStore",id:"CuriStore"},a.default.createElement("p",null,a.default.createElement(i.InlineJS,null,"CuriStore")," will store responses. When creating a store you just need to pass it your router and the store will automatically listen for new responses and update itself."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"const router = curi(history, routes);\nconst curiStore = new CuriStore(router);"),a.default.createElement("p",null,"With React, you can use the ",a.default.createElement(i.InlineComponent,null,"Provider")," from"," ",a.default.createElement(i.InlineJS,null,"mobx-react")," to make your store available to components. You would then use the ",a.default.createElement(i.InlineJS,null,"inject")," higher-order component to inject the Curi props into components. For example, you would inject the"," ",a.default.createElement(i.InlineJS,null,"router"),", ",a.default.createElement(i.InlineJS,null,"response"),", and ",a.default.createElement(i.InlineJS,null,"navigation")," ","props into your ",a.default.createElement(i.InlineComponent,null,"CuriBase"),"."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"const ReactiveBase = inject(({ curi }) => ({\n  router: curi.router,\n  response: curi.response,\n  navigation: curi.navigation\n}))(observer(CuriBase));"),a.default.createElement(i.PrismBlock,{lang:"jsx"},"ReactDOM.render((\n  <Provider curi={curiStore}>\n    <ReactiveBase render={...}/>\n  </Provider>\n), holder);"))))};t.default=c},107:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=l(n(62)),o=l(n(63)),i=n(2),u=n(8),c=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(r.default,{name:t,version:n,globalName:l,about:a.default.createElement("p",null,"This package enables you to use Curi alongside Svelte."," ",a.default.createElement("strong",null,"This package relies on the Svelte store."))},a.default.createElement(o.default,null,a.default.createElement(u.Section,{tag:"h3",title:a.default.createElement(i.InlineComponent,null,"Link"),id:"link"},a.default.createElement("p",null,"In order for the components provided by this package to work, they need to have access to your Curi router object."),a.default.createElement(i.PrismBlock,{lang:"html"},"<div>\n  <Link to='Home'>Home</Link>\n  <Link to='User' params='{{ { userID: 5 } }}'>Profile</Link>\n</div>\n<script>\n  import { Link } from '@curi/svelte';\n  export default {\n    components: { Link }\n  }\n<\/script>"),a.default.createElement(u.Subsection,{title:"Props",id:"link-props"},a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"to")," - the name of the route to link to"),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"params")," - any route params for the linked route"),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"details")," - additional location information (",a.default.createElement(i.InlineJS,null,"query"),", ",a.default.createElement(i.InlineJS,null,"hash"),", ",a.default.createElement(i.InlineJS,null,"state")," for the linked location)."))))),a.default.createElement(u.Section,{title:"Usage",id:"usage"},a.default.createElement("p",null,"The components exported by ",a.default.createElement(i.InlineJS,null,"@curi/svelte")," rely on Svelte's store. The store should include a ",a.default.createElement(i.InlineJS,null,"router")," property for accessing the Curi router and a ",a.default.createElement(i.InlineJS,null,"curi")," property for accessing the latest ",a.default.createElement(i.InlineJS,null,"response")," and ",a.default.createElement(i.InlineJS,null,"navigation")," values."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"import { Store } from 'svelte/store';\n\nconst router = curi(history, routes);\nconst store = new Store({\n  router,\n  curi: { response: null, navigation: null }\n});"),a.default.createElement("p",null,"Add a subscriber to the router to update the store whenever a new response is emitted."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"router.respond((response, navigation) => {\n  store.set({ curi: { response, navigation } });\n});"),a.default.createElement("p",null,"As far as rendering your application goes, you should should have a base component that has any global layout and uses the response to render the correct component(s). Setup a one time subscriber to render this component and make sure to pass the store to the component."),a.default.createElement(i.PrismBlock,{lang:"html"},"<NavLinks />\n<:Component {$curi.response.body}></:Component>\n\n<script>\n  import NavLinks from './NavLinks.html';\n\n  export default {\n\t  components: { NavLinks }\n  };\n<\/script>"),a.default.createElement(i.PrismBlock,{lang:"javascript"},"import app from './components/app';\n\n// use a one time subscriber for the initial render\nconfig.respond(() => {\n  view = new app({ target, store });\n}, { once: true });")))};t.default=c},108:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=l(n(62)),o=l(n(63)),i=n(2),u=(n(9),n(8)),c=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(r.default,{name:t,version:n,globalName:l,about:a.default.createElement("p",null,"This package enables you to use Curi alongside VueJS.")},a.default.createElement(o.default,null,a.default.createElement(u.Section,{tag:"h3",title:"CuriPlugin",id:"curiplugin"},a.default.createElement("p",null,"What does the plugin do?"),a.default.createElement("ol",null,a.default.createElement("li",null,"First, it will register ",a.default.createElement(i.InlineComponent,null,"curi-link")," and"," ",a.default.createElement(i.InlineComponent,null,"curi-block")," components with Vue. You can use these components anywhere within your application."),a.default.createElement("li",null,"Second, it makes your router globally available to Vue components as"," ",a.default.createElement(i.InlineJS,null,"$router"),"."),a.default.createElement("li",null,"Finally, it makes responses and navigations available to components through the ",a.default.createElement(i.InlineJS,null,"$curi")," property. ",a.default.createElement(i.InlineJS,null,"$curi")," is responsive, so when a new response is emitted,"," ",a.default.createElement(i.InlineJS,null,"$curi.response")," and ",a.default.createElement(i.InlineJS,null,"$curi.navigation")," will automatically be updated.")),a.default.createElement(i.PrismBlock,{lang:"javascript"},"import { CuriPlugin } from '@curi/vue';\n\nconst router = curi(history, routes);\nVue.use(CuriPlugin, { router });")),a.default.createElement(u.Section,{tag:"h3",title:a.default.createElement(i.InlineComponent,null,"curi-link"),id:"link"},a.default.createElement("p",null,"The ",a.default.createElement(i.InlineComponent,null,"curi-link")," component will render an anchor (",a.default.createElement(i.InlineComponent,null,"a"),") element."),a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"to")," - The name of the route to navigate to."," ",a.default.createElement("em",null,"This is required"),"."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"params")," - An object containing the key-value params for the route. For example, if you are linking to a route with the path"," ",a.default.createElement(i.InlineJS,null,"album/:title"),", the params object should have a"," ",a.default.createElement(i.InlineJS,null,"title")," property."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"details")," - An object containing additional location properties that should be used for generating the anchor's"," ",a.default.createElement(i.InlineJS,null,"href"),". These additional properties may be ",a.default.createElement(i.InlineJS,null,"query"),","," ",a.default.createElement(i.InlineJS,null,"hash"),", and ",a.default.createElement(i.InlineJS,null,"state")," (which isn't actually part of the ",a.default.createElement(i.InlineJS,null,"href"),").")),a.default.createElement("p",null,"Additionally, any slots that you pass to the ",a.default.createElement(i.InlineComponent,null,"curi-link")," will be rendered inside of the anchor."),a.default.createElement(i.PrismBlock,{lang:"html"},"<curi-link\n  to='Album'\n  :params=\"{ title: 'Coloring Book' }\"\n>\n  Coloring Book\n</curi-link>")),a.default.createElement(u.Section,{tag:"h3",title:a.default.createElement(i.InlineComponent,null,"curi-block"),id:"block"},a.default.createElement("p",null,"The ",a.default.createElement(i.InlineComponent,null,"curi-block")," component can be used to automatically block navigation from a page. This will only block in-app navigation. If the user attempts to leave your application, they will not be blocked."),a.default.createElement("p",null,"The ",a.default.createElement(i.InlineComponent,null,"curi-block")," expects two props: ",a.default.createElement(i.InlineJS,null,"active")," and"," ",a.default.createElement(i.InlineJS,null,"confirm"),"."),a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"active")," - When this is true, navigation will be blocked and when it is false, navigation will be allowed. If you do not provide this prop, it will default to ",a.default.createElement(i.InlineJS,null,"true"),"."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"confirm")," - The function that will be called to confirm/deny the navigation.")),a.default.createElement(i.PrismBlock,{lang:"html"},'<template>\n  <div>\n    \x3c!-- ... --\x3e\n    <curi-block :active="active" :confirm="confirm" />\n  </div>\n</template>\n\n<script>\n  export default {\n    data: {\n      active: true\n    },\n    methods: {\n      confirm(information, go, stay) {\n        const confirmed = window.confirm(\'Navigate?\');\n        if (confirmed) {\n          go();\n        } else {\n          stay();\n        }\n      }\n    }\n  }\n<\/script>'))),a.default.createElement(u.Section,{title:"Usage",id:"usage"},a.default.createElement("p",null,"You can either use a Vue component or a render function to render Curi responses."),a.default.createElement(i.PrismBlock,{lang:"html"},"\x3c!-- App.vue --\x3e\n<template>\n  <div>\n    <NavLinks />\n    <component :is=\"$curi.response.body\" />\n  </div>\n</template>\n\n<script>\n  import NavLinks from './NavLinks';\n  export default {\n    name: 'app',\n    components: { NavLinks }\n  }\n<\/script>\n"),a.default.createElement(i.PrismBlock,{lang:"javascript"},"// renderFunction.js\nimport NavLinks from './NavLinks';\nexport default function renderFunction(h) {\n  return h('div', [\n    h(NavLinks),\n    h(this.$curi.response.body)\n  ]);\n}"),a.default.createElement("p",null,"While the ",a.default.createElement(i.InlineJS,null,"CuriPlugin")," subscribes to your router object, you will still need to wait for it to emit its first update before you can render. To do that, you can pass the ",a.default.createElement(i.InlineJS,null,"{ once: true }")," ","option to a ",a.default.createElement(i.InlineJS,null,"router.respond")," call."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"\nrouter.respond(() => {\n  const vm = new Vue({\n    el: '#app',\n      \n    // either use a template or a render function\n    // TEMPLATE\n    template: '<app />',\n    components: { app: App },\n\n    // RENDER FUNCTION\n    render: function(h) {\n      return h(this.$curi.response.body)\n    }\n  });\n}, { once: true });")))};t.default=c},56:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=n(2),o=l(n(92)),i=function(e){var t=e.params,n=e.data;if(!n)return a.default.createElement("div",null,"The package ",a.default.createElement(r.InlineJS,null,t.package)," could not be found");var l=o.default[t.package],i=n.name,u=n.version,c=n.globalName;return a.default.createElement(l,{name:i,version:u,globalName:c})};t.default=i},62:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}function a(e){return 0===e.indexOf("addon-")?"addons":0===e.indexOf("side-effect-")?"side-effects":void 0}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var r=l(n(0)),o=l(n(94)),i=l(n(95)),u=l(n(96)),c=l(n(97)),s=l(n(15)),d=function(e){var t=e.name,n=e.version,l=e.globalName,d=e.children,m=e.about,f=e.unpkg,p=void 0===f||f;return r.default.createElement("div",{className:"package"},r.default.createElement("div",{className:"content"},r.default.createElement("h1",null,"@curi/",t),r.default.createElement("div",{className:"package-info"},r.default.createElement("div",null,"v",n),r.default.createElement(u.default,{name:t,dir:a(t)}),r.default.createElement(c.default,{name:t})),r.default.createElement(i.default,{about:m}),r.default.createElement(o.default,{name:t,version:n,globalName:l,unpkg:p}),d||null),r.default.createElement("div",{className:"sidebar"},r.default.createElement("h2",null,"Packages"),r.default.createElement(s.default,null)))},m=d;t.default=m},63:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),a=n(8),r=function(e){var t=e.children;return l.default.createElement(a.Section,{title:"API",id:"API"},t)};t.default=r},92:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(93)),r=l(n(98)),o=l(n(99)),i=l(n(100)),u=l(n(101)),c=l(n(102)),s=l(n(103)),d=l(n(104)),m=l(n(105)),f=l(n(106)),p=l(n(107)),h=l(n(108)),E={core:a.default,"addon-active":r.default,"addon-ancestors":o.default,"addon-prefetch":i.default,"side-effect-title":u.default,"side-effect-scroll":c.default,react:s.default,"react-native":d.default,mobx:f.default,redux:m.default,svelte:p.default,vue:h.default};t.default=E},93:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=l(n(62)),o=l(n(63)),i=n(2),u=n(8),c=n(9),s=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(r.default,{name:t,version:n,globalName:l,about:a.default.createElement("p",null,"The core Curi package provides the function that creates Curi routers. While you can pick and choose between the other Curi packages, every application that uses Curi for its routing/navigation ",a.default.createElement("em",null,"must")," use"," ",a.default.createElement(i.InlineJS,null,"@curi/core"),".")},a.default.createElement(o.default,null,a.default.createElement(u.Section,{tag:"h3",title:"curi",id:"curi"},a.default.createElement("p",null,"The Curi package has one export, which is a function that returns a router. It is a default export, so you can name it whatever you like when importing it. Throughout the documentation, it is imported as"," ",a.default.createElement(i.InlineJS,null,"curi"),"."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"import curi from '@curi/core';\n\nconst router = curi(history, routes, options);"),a.default.createElement(u.Section,{tag:"h4",title:"Arguments",id:"arguments"},a.default.createElement(u.Subsection,{tag:"h5",title:"history",id:"history"},a.default.createElement("p",null,"A Hickory history object")),a.default.createElement(u.Subsection,{tag:"h5",title:"routes",id:"routes"},a.default.createElement("p",null,"An array of route objects")),a.default.createElement(u.Subsection,{tag:"h5",title:"options",id:"options"},a.default.createElement("p",null,"An optional object with additional properties that can be passed to your router."),a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"addons")," - An array of add-on instances. The pathname add-on is included by default, but any other add-ons that you wish to use should be provided in this array."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"middleware")," - An array of middleware functions. These are functions that will be able to interact with/modify response objects before they are emitted to subscribed functions."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"cache")," - An object with get/set properties. This allows you to cache old responses, preventing any"," ",a.default.createElement(i.InlineJS,null,"match.every")," functions from being re-called when navigating to an already-visited location."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"pathnameOptions")," - An object with an ",a.default.createElement(i.InlineJS,null,"encode")," ","function that will be used to encode the string created when generating a pathname from a route and its params."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"emitRedirects")," - When ",a.default.createElement(i.InlineJS,null,"false")," (default is"," ",a.default.createElement(i.InlineJS,null,"true"),"), response objects with the"," ",a.default.createElement(i.InlineJS,null,"redirectTo")," property will not be emitted to response handlers (but they will still trigger automatic redirects).")))),a.default.createElement(u.Section,{tag:"h4",title:"Router Properties",id:"properties"},a.default.createElement("p",null,"The router has a number of properties for you to use when rendering your application."),a.default.createElement(u.Subsection,{tag:"h5",title:"respond(fn, options)",id:"respond"},a.default.createElement("p",null,"The returned object provides a ",a.default.createElement(i.InlineJS,null,"respond")," method that allows your application to be informed of navigation. It expects to be passed a function, which will be called whenever a new response is generated."),a.default.createElement("p",null,"If the best-matched route has either a ",a.default.createElement(i.InlineJS,null,"match.initial")," or"," ",a.default.createElement(i.InlineJS,null,"match.every")," loading function, the router will not call the subscribed functions until the loading functions have all resolved."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"router.respond((response) => {\n  // render the application based on the response\n});"),a.default.createElement(u.Subsection,{tag:"h6",title:"options",id:"respond-options"},a.default.createElement(i.PrismBlock,{lang:"javascript"},"{ once: true } // default false\n// When true, the response handler function will only be called once. When\n// once is true, router.respond does not return an unsubscribe function."))),a.default.createElement(u.Subsection,{tag:"h5",title:"current",id:"current-property"},a.default.createElement("p",null,"While ",a.default.createElement(i.InlineJS,null,"router.respond")," is used to listen for new responses, the ",a.default.createElement(i.InlineJS,null,"router.current")," method is a synchronous way to see the current ",a.default.createElement(i.InlineJS,null,"response")," and"," ",a.default.createElement(i.InlineJS,null,"navigation"),"."),a.default.createElement(c.Note,null,"If you call ",a.default.createElement(i.InlineJS,null,"router.current")," before the initial response has been emitted, the ",a.default.createElement(i.InlineJS,null,"response")," and"," ",a.default.createElement(i.InlineJS,null,"navigation")," properties will be ",a.default.createElement(i.InlineJS,null,"null"),"."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"const router = curi(history, routes);\nconst tooSoon = router.current();\n// tooSoon.response === null\n// tooSoon.navigation === null\n\nrouter.respond((response, navigation) => {\n  const justRight = router.current();\n  // justRight.response === response\n  // justRight.navigation === navigation\n});")),a.default.createElement(u.Subsection,{tag:"h5",title:"addons",id:"addons"},a.default.createElement("p",null,"You can access all of the router's add-ons through the addons property. This allows you to call an add-on's get method directly."),a.default.createElement(u.Subsection,{tag:"h6",title:"pathname",id:"pathname-addon"},a.default.createElement("p",null,"Curi includes one built-in add-on: ",a.default.createElement(i.InlineJS,null,"pathname"),", which you can use to generate location pathnames with the name of the route and an optional object containing any necessary params."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"const router = curi(history, [{ name: 'User', path: 'user/:id' }]);\nconst userPathname = router.addons.pathname('User', { id: '12345' });\n// userPathname === '/user/12345'"))),a.default.createElement(u.Subsection,{tag:"h5",title:"history",id:"history-property"},a.default.createElement("p",null,"You can access the history object that you passed to"," ",a.default.createElement(i.InlineJS,null,"curi")," through the router's history property. This allows you to just pass the router throughout your project instead of both that and the history object."))))))};t.default=s},94:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),a=n(2),r=n(8),o=function(e){var t=e.name;return l.default.createElement("div",null,l.default.createElement(a.PrismBlock,{lang:"bash"},"npm install @curi/".concat(t,"\nyarn add @curi/").concat(t)))},i=function(e){var t=e.name,n=e.version,r=e.globalName;return l.default.createElement("div",null,l.default.createElement("p",null,"If you prefer to use script tags, ",l.default.createElement("a",{href:"https://unpkg.com"},"Unpkg")," ","will always have the latest version of ",l.default.createElement(a.InlineJS,null,"@curi/",t)," available for you."),l.default.createElement(a.PrismBlock,{lang:"markup"},'<script src="https://unpkg.com/@curi/'.concat(t,"@").concat(n,"/dist/curi-").concat(t,'.js" />')),l.default.createElement("p",null,"There is also a minimized version available if you change the filename to"," ",l.default.createElement(a.InlineJS,null,t,".min.js"),". The package will be attached to the window as"," ",l.default.createElement(a.InlineJS,null,"window.",r),"."))},u=function(e){var t=e.name,n=e.version,a=e.globalName,u=e.unpkg;return l.default.createElement(r.Section,{title:"Installation",id:"installation"},l.default.createElement(o,{name:t}),u&&l.default.createElement(i,{name:t,version:n,globalName:a}))};t.default=u},95:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),a=n(8),r=function(e){var t=e.about;return l.default.createElement(a.Section,{title:"About",id:"about"},t)};t.default=r},96:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),a=function(e){var t=e.name,n=e.dir;return l.default.createElement("a",{href:"https://github.com/pshrmn/curi/tree/master/packages/".concat(n?n+"/":"").concat(t)},l.default.createElement("img",{style:{height:16,marginRight:5},src:"/static/img/github-logo.png"}),"GitHub Repo")};t.default=a},97:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var l=function(e){return e&&e.__esModule?e:{default:e}}(n(0)),a=function(e){var t=e.name;return l.default.createElement("a",{href:"https://npmjs.com/package/@curi/".concat(t)},l.default.createElement("img",{style:{height:16,marginRight:5},src:"/static/img/npm-logo.png"}),"NPM Package")};t.default=a},98:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=l(n(62)),o=l(n(63)),i=n(2),u=n(8),c=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(r.default,{name:t,version:n,globalName:l,about:a.default.createElement("p",null,"The ",a.default.createElement(i.InlineJS,null,"@curi/addon-active"),' package determines whether a route is "active" by comparing it to the current response. This can be restricted to complete matches or allow partial matches so that locations that represent an ancestor of the current location are also considered "active".')},a.default.createElement(o.default,null,a.default.createElement(u.Section,{tag:"h3",title:"createActiveAddon",id:"createActiveAddon"},a.default.createElement("p",null,"The default export, this function is an add-on factory that will add an ",a.default.createElement(i.InlineJS,null,"active")," function to your router's add-on property."),a.default.createElement("p",null,"The addon returns a boolean, ",a.default.createElement(i.InlineJS,null,"true"),' when a route is "active" (it matches the response\'s ',a.default.createElement(i.InlineJS,null,"location"),") and ",a.default.createElement(i.InlineJS,null,"false")," ","when it is not."),a.default.createElement(i.PrismBlock,{lang:"javascript"},"import curi from '@curi/core';\nimport createActiveAddon from '@curi/addon-active';\n\nconst router = curi(history, routes, {\n  addons: [createActiveAddon()]\n});"),a.default.createElement(u.Subsection,{title:"Arguments",id:"arguments"},a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"name")," - the name of the route to check."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"response")," - the response to check the route against."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"params")," - any route params for the route that is being checked"),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"partial")," - when ",a.default.createElement(i.InlineJS,null,"true"),", ancestor routes can be considered active. (default ",a.default.createElement(i.InlineJS,null,"false"),")")),a.default.createElement(i.PrismBlock,{lang:"javascript"},"const isActive = router.addons.active(\n  'Some Route',\n  response,\n  { id: 10 },\n  false\n);")))))};t.default=c},99:function(e,t,n){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,"__esModule",{value:!0}),t.default=void 0;var a=l(n(0)),r=l(n(62)),o=l(n(63)),i=n(2),u=n(8),c=function(e){var t=e.name,n=e.version,l=e.globalName;return a.default.createElement(r.default,{name:t,version:n,globalName:l,about:a.default.createElement("p",null,"The ",a.default.createElement(i.InlineJS,null,"@curi/addon-ancestors")," add-on allows you to get the names of ancestor routes, which can be useful for generating breadcrumb links.")},a.default.createElement(o.default,null,a.default.createElement(u.Section,{tag:"h3",title:"createAncestorsAddon",id:"createAncestorsAddon"},a.default.createElement("p",null,"The default export, this function is an add-on factory that will add an ",a.default.createElement(i.InlineJS,null,"ancestors")," function to your router object's add-on property."),a.default.createElement("p",null,'The addon returns the name of an ancestor route a given level "up" from the route. If no level is provided, then it will return an array of the names of all ancestor routes (from most ancient to parent).'),a.default.createElement(i.PrismBlock,{lang:"javascript"},"import curi from '@curi/core';\nimport createAncestorsAddon from '@curi/addon-ancestors';\n\nconst routes = [\n  {\n    name: 'Grandparent', path: '0',\n    children: [\n      {\n        name: 'Parent', path: '1',\n        children: [\n          {\n            name: 'Child',\n            path: '2'\n          }\n        ]\n      }\n    ]\n  }\n];\n\nconst router = curi(history,routes, {\n  addons: [createAncestorsAddon()]\n});"),a.default.createElement(u.Subsection,{title:"Arguments",id:"arguments"},a.default.createElement("ul",null,a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"name")," - the name of the route to get ancestors of."),a.default.createElement("li",null,a.default.createElement(i.InlineJS,null,"level"),' - a number of levels "up" to get the ancestor name of. If this argument is not provided, the add-on will return an array of all ancestor routes names (from most ancient to parent).')),a.default.createElement(i.PrismBlock,{lang:"javascript"},"const parent = router.addons.ancestors('Child', 1);\n// parent === 'Parent'\nconst ancestors = router.addons.ancestors('Child');\n// ancestors === ['Grandparent', 'Parent']")))))};t.default=c}});